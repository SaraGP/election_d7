<?php
/**
 * @file
 * Main file for the Election Result module.
 */

/**
 * Implements hook_menu().
 */
function election_results_menu() {
  $items = array();
  $items['election-post/%election_post/results'] = array(
    'title' => 'Results',
    'page callback' => 'election_results_page',
    'page arguments' => array(1),
    'access callback' => 'election_results_access',
    'access arguments' => array('view', 1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
  );
  $items['election-post/%election_post/results/view'] = array(
    'title' => 'Overview',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function election_results_permission() {
  return array(
    'view any election results' => array(
      'title' => t('View any election results'),
      'description' => t('This allows the user to view the results of any election posts.'),
    ),
    'view own election results' => array(
      'title' => t('View own election results'),
      'description' => t('This allows the user to view the results of their own election posts (those to which they have editing access).'),
    ),
  );
}

/**
 * Access callback for viewing results per election post.
 */
function election_results_access($op, stdClass $post, $account = NULL) {
  if (empty($account)) {
    $account = $GLOBALS['user'];
  }
  if ($op == 'view') {
    // The user has to have permission to view the post itself.
    if (!election_post_access('view', $post, $account)) {
      return FALSE;
    }
    // Prevent users from viewing results while voting is open, unless they can
    // 'bypass running election lock'.
    if (_election_post_is_open($post, NULL, 'v') && !user_access('bypass running election lock', $account)) {
      return FALSE;
    }
    if (election_post_access('edit', $post, $account) && user_access('view own election results', $account)) {
      return TRUE;
    }
    if (user_access('view any election results', $account)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Implements hook_entity_load().
 */
function election_results_entity_load($entities, $type) {
  // Add 'ballot_count' property to posts.
  if ($type == 'election_post') {
    $ballot_counts = &drupal_static(__FUNCTION__, array());
    if (count(array_diff_key($entities, $ballot_counts))) {
      $ballot_counts = db_query(
        'SELECT post_id, COUNT(DISTINCT ballot_id) AS ballot_count FROM {election_ballot} WHERE post_id IN(:pids) GROUP BY post_id',
        array(':pids' => array_keys($entities))
      )->fetchAllAssoc('post_id');
    }
    foreach ($entities as $post_id => $post) {
      if (isset($ballot_counts[$post_id])) {
        $post->ballot_count = $ballot_counts[$post_id]->ballot_count;
      }
      else {
        $post->ballot_count = 0;
      }
    }
  }
}

/**
 * Page callback for election-post/%election_post/results.
 *
 * @todo make this themeable
 */
function election_results_page(stdClass $post) {

  $election = $post->election;

  drupal_set_title(t('Results: %post', array('%post' => $post->title)), PASS_THROUGH);
  election_set_breadcrumb($election);

  $output = array();

  if (empty($post->ballot_count)) {
    return array(
      '#markup' => '<p>' . t('No ballots have been cast for this @post.', array('@post' => election_get_post_name($election->type))) . '</p>',
    );
  }

  $totals = db_query(
    'SELECT COUNT(DISTINCT IF(abstain = 0, ballot_id, NULL)) AS votes, COUNT(DISTINCT IF(abstain = 1, ballot_id, NULL)) AS abstentions FROM {election_vote} WHERE post_id = :pid',
    array(
      ':pid' => $post->post_id,
    )
  )->fetch();

  if ($totals->votes == 0 && $totals->abstentions == 0) {
    return $output;
  }

  $header = array(
    'ballots' => t('Ballots'),
    'votes' => t('Votes'),
    'abstentions' => t('Abstentions'),
  );

  $rows = array();
  $rows[0] = array(
    'ballots' => number_format($post->ballot_count),
    'votes' => number_format($totals->votes),
    'abstentions' => number_format($totals->abstentions),
  );

  $output['totals'] = array(
    '#theme' => 'table',
    '#caption' => t('Totals'),
    '#header' => $header,
    '#rows' => $rows,
  );

  drupal_alter('election_results_page', $output, $post, $totals);

  return $output;

}
